# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant::Config.run do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "precise32"
  config.vm.host_name = "cmfsandbox"
  config.vm.customize ["modifyvm", :id, "--memory", 768]

  # The url from where the 'config.vm.box' box will be fetched if it
  # doesn't already exist on the user's system.
  config.vm.box_url = "http://files.vagrantup.com/precise32.box"

  # Boot with a GUI so you can see the screen. (Default is headless)
  # config.vm.boot_mode = :gui

  config.vm.network :hostonly, "172.22.22.22"
  config.vm.share_folder "v-root", "/vagrant", ".." , :nfs => true
  # whithout this symlinks can't be created on the shared folder
  config.vm.customize ["setextradata", :id, "VBoxInternal2/SharedFoldersEnableSymlinksCreate/v-root", "1"]


  # create jackrabbit folder in repo and uncomment line if you want to keep your
  # repository outside the vm
  # config.vm.share_folder "jackrabbit", "/opt/jackrabbit/repository", "../jackrabbit"

  # chef solo configuration
  config.vm.provision :chef_solo do |chef|
    chef.cookbooks_path = "cookbooks"
    chef.roles_path = "roles"
    # chef debug level, start vagrant like this to debug:
    # $ CHEF_LOG_LEVEL=debug vagrant <provision or up>
    chef.log_level = ENV['CHEF_LOG_LEVEL'] || "info"

    # chef recipes
    chef.add_recipe("apt")
    chef.add_role("apache2")
    chef.add_recipe("local")

    # chef roles (settings that can only be defined via roles)
  end
end
